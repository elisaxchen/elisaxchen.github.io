# .github/flat.yaml

# This section defines the steps to fetch data from each theater's website.
# Each step downloads the HTML of a schedule page.
steps:
  - name: brattle
    http_url: https://brattlefilm.org/coming-soon/
    downloaded_filename: brattle.html

  - name: coolidge
    http_url: https://coolidge.org/
    downloaded_filename: coolidge.html

  - name: somerville
    http_url: https://www.somervilletheatre.com/schedule/
    downloaded_filename: somerville.html
    
# This section defines what to do after the files are downloaded.
postprocess:
  # We use the Deno runtime to execute our JavaScript scraper.
  - uses: denoland/deno-run@v1
    with:
      # The script to run.
      script: postprocess.js
      # The command to execute the script.
      # It takes all downloaded HTML files as input and specifies a single output file.
      entrypoint: |
        deno run --allow-read --allow-write postprocess.js brattle.html coolidge.html somerville.html schedule.json

# This section tells Flat Data to commit the resulting files back to the repository.
commit:
  author_name: Movie Schedule Bot
  author_email: elisa.x.chen@gmail.com
  message: "Update movie schedules"
  push_to_branch: main
  # We only need to commit the final, combined JSON file.
  files:
    - schedule.json
